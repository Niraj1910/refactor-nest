<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Create new account</title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <link rel="stylesheet" href="/stylesheets/tailwind.css" />
  </head>

  <body>
    <div>
      <form onsubmit="event.preventDefault(); submitForm();" method="post">
        <div
          class="flex flex-col items-center justify-center h-screen px-6 py-8 lg:py-0"
        >
          <div
            class="w-full bg-white rounded-lg shadow border md:mt-0 sm:max-w-md xl:p-0"
          >
            <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
              <p
                class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl"
              >
                Create Account
              </p>
              <div id="error" class="text-red-500 text-center"></div>
              <div>
                <label class="block mb-2 text-sm font-medium text-gray-900">
                  Email
                </label>
                <input
                  placeholder="JohnDoe"
                  required
                  name="email"
                  class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5"
                  id="email"
                  type="email"
                  autocomplete="email"
                />
              </div>
              <div>
                <label class="block mb-2 text-sm font-medium text-gray-900">
                  Password
                </label>
                <input
                  placeholder="JohnDoe"
                  required
                  name="password"
                  class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5"
                  id="password"
                  type="password"
                  autocomplete="password"
                  minlength="8"
                />
              </div>
              <div>
                <label class="block mb-2 text-sm font-medium text-gray-900">
                  Role
                </label>
                <select
                  required
                  name="role"
                  id="roleSelect"
                  onchange="toggleConstituencyField()"
                  class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg block w-full p-2.5"
                >
                  <option value="user">User</option>
                  <% if (userRole === 'superadmin') { %>
                  <option value="superadmin">Super Admin</option>
                  <% } %>
                  <option value="admin">Admin</option>
                </select>
              </div>
              <div
                id="constituencyContainer"
                style="display: none"
                class="relative"
              >
                <label class="block mb-2 text-sm font-medium text-gray-900">
                  Select Constituencies
                </label>
                <div class="custom-dropdown">
                  <button
                    type="button"
                    id="dropdownButton"
                    class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg w-full p-2.5 flex justify-between items-center"
                    onclick="toggleDropdown()"
                  >
                    <span id="selectedText">Select constituencies</span>
                    <svg
                      class="w-4 h-4"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M19 9l-7 7-7-7"
                      ></path>
                    </svg>
                  </button>
                  <div
                    id="dropdownMenu"
                    class="absolute z-10 hidden w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-48 overflow-y-auto"
                  >
                    <div class="p-2" style="height: 250px">
                      <div class="mb-2 border-b pb-2">
                        <div class="flex items-center">
                          <button
                            type="button"
                            id="selectAllBtn"
                            class="text-sm text-blue-600 hover:underline"
                            onclick="selectAll(true)"
                          >
                            Select All
                          </button>
                          <span class="mx-2">|</span>
                          <button
                            type="button"
                            class="text-sm text-blue-600 hover:underline"
                            onclick="selectAll(false)"
                          >
                            Clear All
                          </button>
                        </div>
                      </div>
                      <% constituencies.forEach(function(constituency) { %>
                      <div class="flex items-center mb-2">
                        <input
                          type="checkbox"
                          id="constituency-<%= constituency._id %>"
                          name="constituency"
                          value="<%= constituency._id %>"
                          class="constituency-checkbox w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500"
                          onchange="updateSelectedText()"
                        />
                        <label
                          for="constituency-<%= constituency._id %>"
                          class="ml-2 text-sm font-medium text-gray-900 w-full cursor-pointer"
                        >
                          <%= constituency.name %>
                        </label>
                      </div>
                      <% }); %>
                    </div>
                  </div>
                </div>
              </div>
              <button
                class="w-full bg-blue-500 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center focus:ring-blue-800 text-white"
                type="submit"
              >
                Create
              </button>
            </div>
          </div>
        </div>
      </form>
    </div>
    <script>
      // Show or hide constituency dropdown based on role selection
      function toggleConstituencyField() {
        const roleSelect = document.getElementById("roleSelect");
        const constituencyContainer = document.getElementById(
          "constituencyContainer"
        );

        if (roleSelect.value === "user") {
          constituencyContainer.style.display = "block";
        } else {
          constituencyContainer.style.display = "none";
          // Clear selections if not user role
          document
            .querySelectorAll(".constituency-checkbox")
            .forEach((checkbox) => {
              checkbox.checked = false;
            });
          updateSelectedText();
        }
      }

      // Toggle dropdown visibility
      function toggleDropdown() {
        const dropdownMenu = document.getElementById("dropdownMenu");
        dropdownMenu.classList.toggle("hidden");

        // Close dropdown when clicking outside
        if (!dropdownMenu.classList.contains("hidden")) {
          document.addEventListener("click", closeDropdownOnClickOutside);
        } else {
          document.removeEventListener("click", closeDropdownOnClickOutside);
        }
      }

      // Close dropdown when clicking outside
      function closeDropdownOnClickOutside(event) {
        const dropdown = document.querySelector(".custom-dropdown");
        if (!dropdown.contains(event.target)) {
          document.getElementById("dropdownMenu").classList.add("hidden");
          document.removeEventListener("click", closeDropdownOnClickOutside);
        }
      }

      // Select or deselect all checkboxes
      function selectAll(select) {
        document
          .querySelectorAll(".constituency-checkbox")
          .forEach((checkbox) => {
            checkbox.checked = select;
          });
        updateSelectedText();
      }

      // Update the selected text based on checked checkboxes
      function updateSelectedText() {
        const selectedCheckboxes = document.querySelectorAll(
          ".constituency-checkbox:checked"
        );
        const selectedText = document.getElementById("selectedText");

        if (selectedCheckboxes.length === 0) {
          selectedText.textContent = "Select constituencies";
        } else {
          selectedText.textContent = `${selectedCheckboxes.length} constituencies selected`;
        }
      }

      // Call the function on page load to set initial state
      document.addEventListener("DOMContentLoaded", () => {
        toggleConstituencyField();
        updateSelectedText();
      });

      function submitForm() {
        const email = document.querySelector('input[name="email"]').value;
        const password = document.querySelector('input[name="password"]').value;
        const role = document.getElementById("roleSelect").value;

        // Create request body
        const requestBody = {
          email,
          password,
          role,
        };

        // Add constituencies array if role is user
        if (role === "user") {
          const selectedConstituencies = Array.from(
            document.querySelectorAll(".constituency-checkbox:checked")
          ).map((checkbox) => checkbox.value);

          // Validate at least one constituency is selected
          if (selectedConstituencies.length === 0) {
            document.querySelector("#error").textContent =
              "Please select at least one constituency";
            return;
          }

          requestBody.allowedConstituencies = selectedConstituencies;
        }

        fetch("/api/auth/create-account", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(requestBody),
        })
          .then(async (response) => {
            if (!response.ok) {
              throw new Error((await response.json()).message);
            }
            return await response.json();
          })
          .then((data) => {
            if (data.success) {
              window.location.href = "/login";
            }
          })
          .catch((error) => {
            console.log(error, "Error");
            document.querySelector("#error").textContent = error.message;
          });
      }
    </script>
  </body>
</html>
